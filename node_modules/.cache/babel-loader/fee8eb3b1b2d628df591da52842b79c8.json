{"ast":null,"code":"var _jsxFileName = \"/home/student/Desktop/Image-Classification-AI/src/App.js\";\nimport React from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport FoodRecognition from './components/FoodRecognition/FoodRecognition';\nimport InferText from './components/InferText/InferText.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '923853faa8cc48c683ebc28b4508f980'\n});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.infer = concepts => {\n      console.log(\"hello\"); //var con_list;\n      //con_list = [];\n\n      for (var i = 0; i < concepts.length; i++) {\n        //console.log(i);\n        //con_list.put(concepts[i].name)\n        var string_1 = concepts[i].name;\n\n        if (string_1.includes(\"salt\") || string_1.includes(\"fat\") || string_1.includes(\"sweet\") || string_1.includes(\"carb\") || string_1.includes(\"sodium\") || string_1.includes(\"crystal\") || string_1.includes(\"sugar\")) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    this.onButtonSubmit = () => {\n      // console.log(\"submit\");\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.initModel({\n        id: Clarifai.GENERAL_MODEL,\n        version: \"aa7f35c01e0642fda5cf400f543e7c40\"\n      }).then(generalModel => {\n        return generalModel.predict(this.state.input);\n      }).then(response => {\n        var concepts = response['outputs'][0]['data']['concepts']; //  console.log(concepts);\n\n        this.check = this.infer(concepts); // state changed to change check text\n\n        this.setState({\n          change: true\n        }); //console.log(check);\n        //if(this.check === true){\n        //  console.log(\"OK\");\n        // }\n        //else{\n        //  console.log(\"NOT OK!\");\n        //}\n      });\n    };\n\n    this.check = \"\";\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      change: \"\"\n    };\n  }\n\n  render() {\n    if (this.check === true) {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(InferText, {\n        inferText: \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(FoodRecognition, {\n        imageUrl: this.state.imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }));\n    } else if (this.check === false) {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(InferText, {\n        inferText: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(FoodRecognition, {\n        imageUrl: this.state.imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(InferText, {\n        inferText: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(FoodRecognition, {\n        imageUrl: this.state.imageUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/student/Desktop/Image-Classification-AI/src/App.js"],"names":["React","Clarifai","Navigation","FoodRecognition","InferText","ImageLinkForm","app","App","apiKey","Component","constructor","onInputChange","event","setState","input","target","value","infer","concepts","console","log","i","length","string_1","name","includes","onButtonSubmit","imageUrl","state","models","initModel","id","GENERAL_MODEL","version","then","generalModel","predict","response","check","change","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport FoodRecognition from './components/FoodRecognition/FoodRecognition';\nimport InferText from './components/InferText/InferText.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\n\n\n\n\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: '923853faa8cc48c683ebc28b4508f980'\n });\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.check = \"\";\n    this.state={\n      input:\"\",\n      imageUrl: \"\",\n      change:\"\"\n    }\n  }\n\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value});\n  }\n  infer = (concepts) =>{\n    console.log(\"hello\");\n    //var con_list;\n    //con_list = [];\n    for(var i=0; i< concepts.length;i++){\n      //console.log(i);\n      //con_list.put(concepts[i].name)\n      var string_1 = concepts[i].name;\n      if (string_1.includes(\"salt\")\n          || string_1.includes(\"fat\") \n          || string_1.includes(\"sweet\") \n          || string_1.includes(\"carb\") \n          || string_1.includes(\"sodium\") \n          || string_1.includes(\"crystal\") \n          || string_1.includes(\"sugar\")){\n            return false;\n          }\n\n    }\n    return true;\n  }\n  onButtonSubmit = () =>{\n   // console.log(\"submit\");\n    this.setState({imageUrl:this.state.input});\n    app.models.initModel({id: Clarifai.GENERAL_MODEL, version: \"aa7f35c01e0642fda5cf400f543e7c40\"})\n      .then(generalModel => {\n        return generalModel.predict(this.state.input);\n      })\n      .then(response => {\n        \n        var concepts = response['outputs'][0]['data']['concepts'];\n      //  console.log(concepts);\n        this.check = this.infer(concepts);\n        \n        // state changed to change check text\n        this.setState({change:true});\n        //console.log(check);\n        //if(this.check === true){\n        //  console.log(\"OK\");\n       // }\n        //else{\n        //  console.log(\"NOT OK!\");\n        //}\n\n\n\n      })\n  }\n  \n\n  render(){\n  if(this.check === true){\n    \n    return (\n      <div className=\"App\">\n        \n        \n        <Navigation />\n        \n        \n        <ImageLinkForm onInputChange = {this.onInputChange} onButtonSubmit = {this.onButtonSubmit}/>\n\n        <InferText inferText = \"true\"/>\n        <FoodRecognition imageUrl = {this.state.imageUrl} />\n      </div>\n    );\n      }\n\n      else if(this.check === false){\n    \n        return (\n          <div className=\"App\">\n            \n            \n            <Navigation />\n            \n            \n            <ImageLinkForm onInputChange = {this.onInputChange} onButtonSubmit = {this.onButtonSubmit}/>\n            <InferText inferText = \"false\"/>\n        \n            <FoodRecognition imageUrl = {this.state.imageUrl} />\n          </div>\n        );\n          }\n\n          else{\n    \n            return (\n              <div className=\"App\">\n                \n                \n                <Navigation />\n                \n                \n                <ImageLinkForm onInputChange = {this.onInputChange} onButtonSubmit = {this.onButtonSubmit}/>\n        \n                <InferText inferText = \"\"/>\n                <FoodRecognition imageUrl = {this.state.imageUrl} />\n              </div>\n            );\n              }\n  \n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}