{"ast":null,"code":"var _jsxFileName = \"/home/student/Desktop/Image-Classification-AI/src/App.js\";\nimport React from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport FoodRecognition from './components/FoodRecognition/FoodRecognition';\nimport Rank from './components/Rank/Rank.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '923853faa8cc48c683ebc28b4508f980'\n});\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.infer = concepts => {\n      console.log(\"hello\");\n      var con_list = [];\n\n      for (var i = 0; i < concepts.length; i++) {\n        console.log(i);\n        con_list.push(concepts[i].name);\n      }\n\n      console.log(\"hi\");\n      console.log(con_list);\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.initModel({\n        id: Clarifai.GENERAL_MODEL,\n        version: \"aa7f35c01e0642fda5cf400f543e7c40\"\n      }).then(generalModel => {\n        return generalModel.predict(this.state.input);\n      }).then(response => {\n        var concepts = response['outputs'][0]['data']['concepts'];\n        this.infer(concepts);\n      });\n    };\n\n    this.onRouteChange = () => {\n      this.setState({\n        route: 'home'\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      route: 'signin'\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000').then(response => response.json()).then(console.log);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), this.state.route === 'signin' ? React.createElement(Signin, {\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(FoodRecognition, {\n      imageUrl: this.state.imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/student/Desktop/Image-Classification-AI/src/App.js"],"names":["React","Clarifai","Navigation","Signin","FoodRecognition","Rank","ImageLinkForm","app","App","apiKey","Component","constructor","onInputChange","event","setState","input","target","value","infer","concepts","console","log","con_list","i","length","push","name","onButtonSubmit","imageUrl","state","models","initModel","id","GENERAL_MODEL","version","then","generalModel","predict","response","onRouteChange","route","componentDidMount","fetch","json","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport FoodRecognition from './components/FoodRecognition/FoodRecognition';\nimport Rank from './components/Rank/Rank.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\n\n\n\n\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: '923853faa8cc48c683ebc28b4508f980'\n });\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      input:\"\",\n      imageUrl: \"\",\n      route: 'signin'\n    }\n  }\n\n  componentDidMount(){\n    fetch('http://localhost:3000')\n      .then(response => response.json())\n      .then(console.log)\n  }\n\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value});\n  }\n  // returns true or false based on if it's ok for patients or not\n  infer = (concepts) =>{\n    console.log(\"hello\");\n    var con_list = [];\n    for(var i=0; i< concepts.length;i++){\n      console.log(i);\n      con_list.push(concepts[i].name);\n\n    }\n    console.log(\"hi\");\n    console.log(con_list);\n  }\n  onButtonSubmit = () =>{\n    this.setState({imageUrl:this.state.input});\n    app.models.initModel({id: Clarifai.GENERAL_MODEL, version: \"aa7f35c01e0642fda5cf400f543e7c40\"})\n      .then(generalModel => {\n        return generalModel.predict(this.state.input);\n      })\n      .then(response => {\n        \n        var concepts = response['outputs'][0]['data']['concepts'];\n        this.infer(concepts);\n\n\n      })\n  }\n\n  onRouteChange = () => {\n    this.setState({route: 'home'});\n\n  }\n \n  render(){\n  return (\n    <div className=\"App\">\n      \n      \n      <Navigation />\n      { this.state.route === 'signin'\n        ? <Signin onRouteChange={this.onRouteChange} />\n        : <div>\n            <Rank />\n            <ImageLinkForm onInputChange = {this.onInputChange} onButtonSubmit = {this.onButtonSubmit}/>\n\n    \n            <FoodRecognition imageUrl = {this.state.imageUrl} />\n          </div>\n      }\n    </div>\n  );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}